@using Coba_Net.Models
@model CarListView
@{
    ViewData["Title"] = "Home Page";
    var searchBarProps = new SearchBarProps {
        SearchValue = Model.Pagination.Search,
        SearchPath = "/Home"
    };
    var paginationProps = new PaginationProps {
        Pagination = Model.Pagination,
        Path = "/Home",
        Count = Model.Cars.Count
    };
    var DropdownFilterBrand = new DropdownFilter{
        FilterBy = "Brand",
        DropdownList = Model.BrandFilter,
        Label = "Filter By Brand"
    };
    var DropdownFilterColor = new DropdownFilter{
        FilterBy = "Color",
        DropdownList = Model.ColorFilter,
        Label = "Filter By Color"
    };
    var RangePriceFilter = new RangeFilter{
        Label = "Filter By Price",
        From = "FromPrice",
        To = "ToPrice"
    };
}

<div class="flex flex-col gap-10 pb-10 h-full overflow-y-auto flex-1">
    <div class="flex flex-col w-full">
        <div class="flex w-full p-6 px-10 shadow-lg text-2xl font-bold bg-[#202020]">
            <span>Home:</span>
        </div>
        <div class="flex w-full">
            <a href="/" class="text-center text-lg font-bold bg-[#27496D] p-2 flex-1">Car</a>
            <a href="/Home/Chart" class="text-center text-lg font-bold bg-[#222831] hover:bg-[#27496D] p-2 flex-1">Chart</a>
        </div>
    </div>
    @await Html.PartialAsync("~/Views/Shared/SearchBar.cshtml", searchBarProps)
    <div class="flex w-full px-10 flex-wrap gap-4">
        @await Html.PartialAsync("~/Views/Shared/Dropdown.cshtml", DropdownFilterBrand)
        @await Html.PartialAsync("~/Views/Shared/Dropdown.cshtml", DropdownFilterColor)
        @await Html.PartialAsync("~/Views/Shared/RangeFilter.cshtml", RangePriceFilter)
    </div>
    <div class="px-10 w-full flex flex-wrap gap-10">
        @if (Model.Cars.Count > 0)
        {
            foreach (var car in Model.Cars)
            {
                <div class="bg-[#1e1e1e] shadow-lg rounded-xl gap-6 p-6 flex flex-col flex-1 min-w-[275px]">
                    <div class="flex w-full justify-center h-[150px] items-center">
                        @if (car.PicUrl == null)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="150" height="150" fill="currentColor" class='bi bi-car-front-fill' viewBox="0 0 16 16">
                                <path d="M2.52 3.515A2.5 2.5 0 0 1 4.82 2h6.362c1 0 1.904.596 2.298 1.515l.792 1.848c.075.175.21.319.38.404.5.25.855.715.965 1.262l.335 1.679c.033.161.049.325.049.49v.413c0 .814-.39 1.543-1 1.997V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.338c-1.292.048-2.745.088-4 .088s-2.708-.04-4-.088V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.892c-.61-.454-1-1.183-1-1.997v-.413a2.5 2.5 0 0 1 .049-.49l.335-1.68c.11-.546.465-1.012.964-1.261a.807.807 0 0 0 .381-.404l.792-1.848ZM3 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm10 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM6 8a1 1 0 0 0 0 2h4a1 1 0 1 0 0-2H6ZM2.906 5.189a.51.51 0 0 0 .497.731c.91-.073 3.35-.17 4.597-.17 1.247 0 3.688.097 4.597.17a.51.51 0 0 0 .497-.731l-.956-1.913A.5.5 0 0 0 11.691 3H4.309a.5.5 0 0 0-.447.276L2.906 5.19Z"/>
                            </svg>
                        }
                        else
                        {
                            <a href="@car.PicUrl" target="_blank"><img src="@car.PicUrl" class="max-h-[150px] rounded-lg"></a>
                        }
                    </div>
                    <div class="flex flex-col gap-4">
                        <div class="flex gap-2 flex-1">
                            <div>Name</div>
                            <div>:</div>
                            <div>@car.Name</div>
                        </div>
                        <div class="flex gap-2 flex-1">
                            <div>Brand</div>
                            <div>:</div>
                            <div>@car.Brand</div>
                        </div>
                        <div class="flex gap-2 flex-1">
                            <div>Color</div>
                            <div>:</div>
                            <div>@car.Color</div>
                        </div>
                        <div class="flex gap-2 flex-1">
                            <div>Price</div>
                            <div>:</div>
                            <div>@Html.DisplayFor(m => car.Price, "MoneyFormat")</div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            @await Html.PartialAsync("~/Views/Shared/EmptyData.cshtml")
        }
        <div class="bg-[#1e1e1e] flex shadow-lg rounded-xl w-full">
            @await Html.PartialAsync("~/Views/Shared/Pagination.cshtml", paginationProps)
        </div>
    </div>
</div>