@using Coba_Net.Models
@model DropdownFilter
@using Coba_Net.Utils
@{
    var rand = new Formatter{}.GenerateRandomString(5);
    string currentPath = ViewData["CurrentPath"].ToString();
    string queryString = ViewData["QueryString"].ToString();
    string filterBy = Model.FilterBy;
    string selectedValue = string.Empty;
    if (!string.IsNullOrEmpty(queryString))
    {
        var queryCollection = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(queryString);
        if (queryCollection.ContainsKey(filterBy))
        {
            selectedValue = queryCollection[filterBy];
        }
    }
}

<div class="flex flex-col flex-1 gap-1 md:min-w-[120px] min-w-[200px] md:max-w-[250px] relative">
    <span>@Model.Label</span>
    <button id="select-@rand" class="bg-[#4e4f3e] h-[48px] w-full p-2 pl-4 py-3 rounded-lg flex gap-2 items-center">
        <div class="flex-1 text-start">@selectedValue</div>
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
            <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
        </svg>
    </button>
    <div id="select-drop-@rand" class="hidden absolute top-[calc(100%+2px)] z-[5] left-0 rounded-lg py-2 bg-[#4e4f3e] flex flex-col w-full">
        <button id="clear-@rand" class="hover:bg-[#3c3d2f] p-2 pl-4 text-start">Clear Filter</button>
        @foreach(var dropdown in Model.DropdownList){
            <button onclick="selectFilter('@filterBy', '@dropdown')" class="hover:bg-[#3c3d2f] p-2 pl-4 text-start">@dropdown</button>
        }
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const select = document.getElementById("select-@rand")
        const dropdownMenu = document.getElementById("select-drop-@rand")
        const clear = document.getElementById("clear-@rand")

        select.addEventListener("click", function() {
            dropdownMenu.classList.toggle("hidden");
        });

        clear.addEventListener("click", function() {
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set("@filterBy", "");
            window.location.href = `${window.location.pathname}?${urlParams.toString()}`;
        });

        document.addEventListener("click", function(event) {
            if (!select.contains(event.target) && !dropdownMenu.contains(event.target)) {
                dropdownMenu.classList.add("hidden");
            }
        });
    });

    function selectFilter(filterBy = "", data = ""){
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set(filterBy, data);
        window.location.href = `${window.location.pathname}?${urlParams.toString()}`;
    }
</script>